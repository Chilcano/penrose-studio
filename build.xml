<?xml version="1.0"?>
<!--
 Copyright (c) 2000-2006, Identyx Corporation.
 All rights reserved.
-->
<project name="penrose-studio" default="compile">

    <description>Penrose Studio</description>

    <property file="build.properties"/>

    <property name="project.name" value="penrose-studio"/>
    <property name="project.dist" value="dist"/>

    <property name="prefix" value=""/>
    <property name="penrose.studio.home" value="${prefix}/usr/local/${project.name}-${product.version}b1"/>

    <property name="rcp.prefix" value="eclipse-RCP-3.2.2"/>
    <property name="iscc.path" value="ISCC.exe"/>
    <property name="cygwin.home" value="c:/cygwin"/>

    <tstamp>
        <format property="TIMESTAMP" pattern="yyyyMMddHHmmss"/>
    </tstamp>

    <path id="lib.path">
        <fileset dir="lib">
            <include name="*.jar"/>
            <include name="penrose-pro/*.jar"/>
            <include name="plugins/*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <echo message="Operating System: ${os.name} ${os.version} (${os.arch})" />
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isLinux">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
                <not>
                    <os arch="amd64"/>
                </not>
            </and>
        </condition>
        <condition property="isLinux64">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
                <os arch="amd64"/>
            </and>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>
    </target>

    <target name="import" depends="init">
        <copy todir="lib" file="../penrose-pro-${product.specification}/agent/target/penrose-agent-${penrose.version}.jar"/>
        <copy todir="lib" file="../penrose-pro-${product.specification}/agent/target/penrose-agent-client-${penrose.version}.jar"/>
        <copy todir="lib" file="../penrose-pro-${product.specification}/lib/penrose-${penrose.version}.jar"/>
        <copy todir="lib" file="../penrose-pro-${product.specification}/server/lib/penrose-server-${penrose.version}.jar"/>
        <copy todir="lib" file="../penrose-pro-${product.specification}/target/penrose-pro-${penrose.version}.jar"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${project.dist}" failonerror="false"/>
        <delete dir="target" failonerror="false"/>
    </target>

    <target name="build-tools" depends="init">
        <mkdir dir="target/tools"/>
        <javac
            srcdir="src/tools"
            destdir="target/tools"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <jar destfile="target/penrose-studio-tools-${product.version}.jar" basedir="target/tools"/>
    </target>

    <target name="manifest" depends="build-tools">
        <mkdir dir="META-INF"/>
        <copy todir="META-INF" file="MANIFEST.MF" overwrite="true">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <taskdef name="manifest-generator" classname="org.safehaus.penrose.tools.ManifestTask" classpath="target/penrose-studio-tools-${product.version}.jar"/>
        <manifest-generator
            file="META-INF/MANIFEST.MF"
            dir="lib"
            newDir="lib"
        />
    </target>

    <target name="compile" depends="manifest">
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <copy todir="target/classes">
            <fileset dir="src/java">
                <include name="**/*.xml"/>
                <include name="**/*.dtd"/>
                <include name="**/*.properties"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
                <include name="**/*.ico"/>
            </fileset>
            <fileset dir=".">
                <include name="plugin.xml"/>
            </fileset>
        </copy>
        <jar basedir="target/classes" destfile="target/${project.name}-${product.version}.jar">
            <patternset>
                <exclude name="**/.svn"/>
            </patternset>
            <manifest>
                <attribute name="Specification-Version"  value="${product.specification}"/>
                <attribute name="Implementation-Title"   value="Penrose Studio"/>
                <attribute name="Implementation-Version" value="${product.version}"/>
                <attribute name="Implementation-Vendor"  value="Identyx Corporation"/>
                <attribute name="Built-Date" value="${TIMESTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="build" depends="compile">
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <property name="plugin.path" value="target/${dist.name}/plugins/org.safehaus.penrose_${product.version}"/>
        <copy todir="target" file="LICENSE.txt"/>
        <mkdir dir="target/${dist.name}"/>
        <copy todir="target/${dist.name}" file="LICENSE.txt"/>
        <copy todir="target/${dist.name}/conf">
            <fileset dir="conf">
                <include name="*.*"/>
                <exclude name=".svn/**"/>
            </fileset>
        </copy>
<!--
        <mkdir dir="target/${dist.name}/conf/lib"/>
-->
        <copy todir="target/${dist.name}/configuration">
            <fileset dir="rcp/configuration">
                <include name="*.*"/>
                <exclude name=".svn/**"/>
            </fileset>
        </copy>
        <mkdir dir="target/${dist.name}/logs"/>
        <mkdir dir="${plugin.path}"/>
        <copy todir="target/${dist.name}/plugins">
            <fileset dir="lib/plugins">
                <include name="org.eclipse.core.runtime.compatibility_3.1.1.jar"/>
                <include name="org.eclipse.ui.forms_3.2.0.jar"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}">
            <fileset dir=".">
                <include name="images/**"/>
                <include name="lib/*.jar"/>
                <include name="plugin.xml"/>
                <include name="splash.bmp"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}/lib">
            <fileset dir="target">
                <include name="${project.name}-${product.version}.jar"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}/META-INF" file="MANIFEST.MF" overwrite="true">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <taskdef name="manifest-generator" classname="org.safehaus.penrose.tools.ManifestTask" classpath="target/penrose-studio-tools-${product.version}.jar"/>
        <manifest-generator
            file="${plugin.path}/META-INF/MANIFEST.MF"
            dir="${plugin.path}/lib"
            newDir="lib"
        />
        <copy todir="target/${dist.name}" file="README.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/${dist.name}" file="COPYING.txt"/>
        <copy todir="target/${dist.name}" file="INSTALL-BINARY.txt"/>
        <copy todir="target/${dist.name}/docs">
            <fileset dir="docs" includes="*.url"/>
        </copy>
        <copy todir="target/${dist.name}" file="images/penrose.ico"/>
        <fixcrlf srcdir="target" includes="**/*.txt" eol="unix"/>
    </target>

    <target name="dist" depends="init">
        <antcall target="build-linux"/>
        <antcall target="build-linux-gtk-x86_64"/>
        <antcall target="build-macosx"/>
        <antcall target="build-win32"/>
    </target>

    <target name="build-linux-gtk-x86_64" depends="init" if="isLinux64">
        <property name="platform" value="linux-gtk-x86_64"/>
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <!-- uncompress rpc -->
        <untar src="rcp/${rcp.prefix}-${platform}.tar.gz" dest="target" compression="gzip"/>
        <move todir="target/${dist.name}">
            <fileset dir="target/eclipse"/>
        </move>
        <move file="target/${dist.name}/eclipse" tofile="target/${dist.name}/${project.name}"/>
        <chmod file="target/${dist.name}/${project.name}" perm="a+rx"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

    <target name="build-linux" depends="init" if="isLinux">
        <property name="platform" value="linux-gtk"/>
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <!-- uncompress rpc -->
        <untar src="rcp/${rcp.prefix}-${platform}.tar.gz" dest="target" compression="gzip"/>
        <move todir="target/${dist.name}">
            <fileset dir="target/eclipse"/>
        </move>
        <move file="target/${dist.name}/eclipse" tofile="target/${dist.name}/${project.name}"/>
        <chmod file="target/${dist.name}/${project.name}" perm="a+rx"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

    <target name="build-macosx" depends="init" if="isMac">
        <property name="platform" value="macosx-carbon"/>
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <!-- uncompress rcp -->
        <untar src="rcp/${rcp.prefix}-${platform}.tar.gz" dest="target" compression="gzip"/>
        <move todir="target/${dist.name}">
            <fileset dir="target/eclipse"/>
        </move>
        <!-- apply universal binary patch 
        doesnt need anymore since the RCP is 3.2
        <copy
            todir="target/${dist.name}/plugins"
            file="rcp/org.eclipse.swt.carbon.macosx.ppc_3.1.0.jar"
            overwrite="true"
        />
    	-->
        <chmod file="target/${dist.name}/eclipse" perm="a+rx"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

    <target name="build-win32" depends="init" if="isWindows">
        <property name="platform" value="win32"/>
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <!-- uncompress rpc -->
        <unzip src="rcp/${rcp.prefix}-${platform}.zip" dest="target"/>
        <move todir="target/${dist.name}">
            <fileset dir="target/eclipse"/>
        </move>
        <move file="target/${dist.name}/eclipse.exe" tofile="target/${dist.name}/penrose-studio.exe"/>
        <copy file="launcher/penrose-studio.exe" tofile="target/${dist.name}/penrose-studio.exe"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

<!--
    <target name="plugin-export">
        <pde.exportPlugins plugins="org.safehaus.penrose"
            destination="target" filename="penrose-plugin.zip"
            exportType="zip" exportSource="false"/>
    </target>
-->

    <target name="dist-src" depends="init">
        <echo message="Creating ${project.name}-${product.version}-src.tar.gz"/>
        <mkdir dir="${project.dist}"/>
        <tar destfile="${project.dist}/${project.name}-${product.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${project.name}-${product.version}">
                <exclude name="${project.dist}/**"/>
                <exclude name="target/**"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-all" depends="compile">
        <copy
            todir="${project.dist}"
            file="target/${project.name}-${product.version}.jar">
        </copy>
        <antcall target="dist-linux"/>
        <antcall target="dist-linux-gtk-x86_64"/>
        <antcall target="dist-macosx"/>
        <antcall target="dist-win32"/>
    </target>

    <target name="dist-linux-gtk-x86_64" depends="build-linux-gtk-x86_64" if="isLinux64">
        <antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.arch" value="x86_64"/>
            <param name="rpm.name" value="${project.name}-${product.version}-1.x86_64.rpm"/>
        </antcall>
    </target>

    <target name="dist-linux" depends="build-linux" if="isLinux">

    	<antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.arch" value="i386"/>
            <param name="rpm.name" value="${project.name}-${product.version}-1.i386.rpm"/>
        </antcall>

    	
   </target>

    <target name="dist-macosx" depends="build-macosx" if="isMac">
        <property name="app.name" value="Penrose Studio.app"/>
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>

        <echo message="Creating ${app.name}"/>
        <mkdir dir="target/${dist.name}"/>
        <move todir="target/${dist.name}/${app.name}">
            <fileset dir="target/${dist.name}/Eclipse.app"/>
        </move>
        <delete file="target/${dist.name}/eclipse"/>
        <move todir="target/${dist.name}/${app.name}/Contents/MacOS">
            <fileset dir="target/${dist.name}">
                <exclude name="${app.name}/**"/>
            </fileset>
        </move>
<!--
        <move tofile="target/${dist.name}/${app.name}/Contents/MacOS/penrose-studio"
            file="target/${dist.name}/${app.name}/Contents/MacOS/eclipse"
        />
-->
        <chmod file="target/${dist.name}/${app.name}/Contents/MacOS/eclipse" perm="a+rx" />
        <copy todir="target/${dist.name}/${app.name}/Contents" file="rcp/Info.plist" overwrite="true">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/${dist.name}/${app.name}/Contents/MacOS"
            file="rcp/eclipse.ini" overwrite="true"
        />
        <copy tofile="target/${dist.name}/${app.name}/Contents/Resources/Penrose.icns"
            file="images/Penrose.icns" overwrite="true"
        />
        <delete file="target/${dist.name}/${app.name}/Contents/Resources/Eclipse.icns"/>
        <mkdir dir="target/${dist.name}/.background"/>

        <echo message="Creating ${project.name}-${product.version}.dmg"/>
        <mkdir dir="${project.dist}"/>
        <exec executable="bin/pkg-dmg">
            <arg line="--source target/${dist.name}"/>
            <arg line="--target dist/${project.name}-${product.version}.dmg"/>
            <arg line="--volname &quot;Penrose Studio ${product.version}&quot;"/>
            <arg line="--license target/LICENSE.txt"/>
            <arg line="--icon images/PenroseDMG.icns"/>
            <arg line="--mkdir /.background"/>
<!--
            <arg line="- -copy images/background.png:/.background/background.png"/>
-->
            <arg line="--copy installer/DSStore:/.DS_Store"/>
            <arg line="--verbosity 2"/>
        </exec>
    </target>

    <target name="dist-win32" depends="build-win32" if="isWindows">
        <echo message="Creating ${project.dist}/${project.name}-${product.version}.exe"/>
        <copy todir="target" file="installer/penrose-studio.iss">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <exec executable="${iscc.path}">
            <arg line="/Q target/penrose-studio.iss"/>
        </exec>
        <antcall target="rpm">
            <param name="rpm.prefix" value="${cygwin.home}"/>
            <param name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
            <param name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
            <param name="rpm.arch" value="i386"/>
            <param name="rpm.name" value="${project.name}-${product.version}-1.cygwin.i386.rpm"/>
        </antcall>
    </target>

    <target name="rpm-check" depends="init">
        <echo message="Checking ${rpm.builder}"/>
        <condition property="hasRpmBuilder">
            <available file="${rpm.builder}"/>
        </condition>
    </target>

    <target name="rpm-build" depends="dist-src" if="hasRpmBuilder">
        <copy todir="target" file="installer/penrose-studio.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${project.dist}/${project.name}-${product.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-bb target/penrose-studio.spec"/>
        </exec>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/RPMS/${rpm.arch}/${rpm.name}">
        </copy>
        <copy file="bin/sfx-header" tofile="${project.dist}/${rpm.name}.bin" overwrite="true"/>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="echo __LICENSE__ &gt;&gt; ${project.dist}/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="cat LICENSE.txt &gt;&gt; ${project.dist}/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="echo __CONTENT__ &gt;&gt; ${project.dist}/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="cat ${project.dist}/${rpm.name} &gt;&gt; ${project.dist}/${rpm.name}.bin"/>
        </exec>
        <chmod file="${project.dist}/${rpm.name}.bin" perm="a+rx"/>
    </target>

    <target name="rpm" depends="rpm-check,rpm-build">
    </target>

    <target name="install" depends="init">
        <antcall target="install-linux"/>
        <antcall target="install-linux-gtk-x86_64"/>
        <antcall target="install-macosx"/>
        <antcall target="install-win32"/>
    </target>

    <target name="install-linux-gtk-x86_64" if="isLinux64">
        <antcall target="install-dist">
            <param name="platform" value="linux-gtk-x86_64"/>
        </antcall>
        <chmod dir="${penrose.studio.home}" includes="penrose-studio" perm="a+rx" />
    </target>

    <target name="install-linux" if="isLinux">
        <antcall target="install-dist">
            <param name="platform" value="linux-gtk"/>
        </antcall>
        <chmod dir="${penrose.studio.home}" includes="penrose-studio" perm="a+rx" />
    </target>

    <target name="install-macosx" if="isMac">
        <antcall target="install-dist">
            <param name="platform" value="macosx-carbon"/>
        </antcall>
    </target>

    <target name="install-win32" depends="init" if="isWindows">
        <antcall target="install-dist">
            <param name="platform" value="win32"/>
        </antcall>
    </target>

    <target name="pre-install" depends="init">
        <mkdir dir="${penrose.studio.home}"/>
        <condition property="penrose.conf.missing">
          <not>
            <available file="${penrose.studio.home}/conf/driver.xml"/>
          </not>
        </condition>
    </target>

    <target name="copy-penrose-conf" depends="init" if="penrose.conf.missing">
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <copy todir="${penrose.studio.home}">
            <fileset dir="target/${dist.name}">
                <include name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="install-dist" depends="pre-install,copy-penrose-conf">
        <property name="dist.name" value="${project.name}-${product.version}-${platform}"/>
        <delete failonerror="false">
            <fileset dir="${penrose.studio.home}" includes="lib/*"/>
        </delete>
        <copy todir="${penrose.studio.home}">
            <fileset dir="target/${dist.name}">
                <include name="**/*"/>
                <exclude name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="uninstall" depends="init">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${penrose.studio.home}/docs" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/features" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/plugins" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/readme" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/work" includes="**/*"/>
            <fileset dir="${penrose.studio.home}" includes="*"/>
        </delete>
    </target>

</project>

