<?xml version="1.0"?>
<!-- ====================================================================== 
	 Copyright (c) 2000-2005, Identyx Corporation.
	 All rights reserved.
     ====================================================================== -->
<project name="penrose-studio" default="compile">

    <description>Penrose Studio</description>
	
    <property name="project.name" value="penrose-studio"/>
	<property name="project.version" value="1.1"/>
    <property name="project.dist" value="dist"/>

    <property name="prefix" value=""/>
    <property name="penrose.studio.home" value="${prefix}/usr/local/${project.name}-${project.version}"/>

    <property name="penrose.version" value="1.1"/>

    <property name="rcp.prefix" value="eclipse-RCP-3.1"/>
    <property name="iscc.path" value="ISCC.exe"/>
    <property name="cygwin.home" value="c:/cygwin"/>

    <tstamp/>

    <path id="lib.path">
        <fileset dir="lib">
            <include name="*.jar"/>
            <include name="penrose-pro/*.jar"/>
            <include name="plugins/*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <condition property="isLinux">
            <os name="Linux"/>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
    </target>

    <target name="import" depends="init">
        <copy todir="lib" file="../penrose-1.1/lib/penrose-${penrose.version}.jar"/>
        <copy todir="lib" file="../penrose-1.1/target/penrose-pro-${penrose.version}.jar"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${project.dist}" failonerror="false"/>
    	<delete dir="target" failonerror="false"/>
    </target>

    <target name="build-tools" depends="init">
        <mkdir dir="target/tools"/>
        <javac srcdir="src/tools" destdir="target/tools"/>
        <jar destfile="target/penrose-studio-tools-${project.version}.jar" basedir="target/tools"/>
    </target>

    <target name="manifest" depends="build-tools">
        <mkdir dir="META-INF"/>
        <copy todir="META-INF" file="MANIFEST.MF" overwrite="true">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <taskdef name="manifest-generator" classname="org.safehaus.penrose.tools.ManifestTask" classpath="target/penrose-studio-tools-${project.version}.jar"/>
        <manifest-generator
            file="META-INF/MANIFEST.MF"
            dir="lib"
            newDir="lib"
        />
    </target>

    <target name="compile" depends="manifest">
    	<mkdir dir="target/classes"/>
    	<javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
        />
<!--
            source="1.4"
            target="1.4"
-->
    	<copy todir="target/classes">
    		<fileset dir="src/java">
    			<include name="**/*.xml"/>
    			<include name="**/*.dtd"/>
    			<include name="**/*.properties"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
				<include name="**/*.ico"/>
    		</fileset>
    		<fileset dir=".">
    			<include name="plugin.xml"/>
    		</fileset>
    	</copy>
    	<jar basedir="target/classes" destfile="target/${project.name}-${project.version}.jar">
    		<patternset>
    			<exclude name="**/.svn"/>
    		</patternset>
            <manifest>
              <attribute name="Specification-Version"  value="1.0"/>
              <attribute name="Implementation-Title"   value="Penrose Studio"/>
              <attribute name="Implementation-Version" value="${project.version}"/>
              <attribute name="Implementation-Vendor"  value="Identyx Corporation"/>
              <attribute name="Built-Date" value="${DSTAMP}"/>
            </manifest>
    	</jar>
    </target>

    <target name="build" depends="compile">
        <property name="project.path" value="target/${project.name}-${project.version}-${platform}"/>
        <property name="plugin.path" value="${project.path}/plugins/org.safehaus.penrose_${project.version}"/>
        <copy todir="target" file="LICENSE.txt"/>
        <mkdir dir="${project.path}"/>
        <copy todir="${project.path}" file="LICENSE.txt"/>
        <copy todir="${project.path}/conf">
            <fileset dir="conf">
                <include name="*.*"/>
                <exclude name=".svn/**"/>
            </fileset>
        </copy>
        <copy todir="${project.path}/configuration">
            <fileset dir="rcp/configuration">
                <include name="*.*"/>
                <exclude name=".svn/**"/>
            </fileset>
        </copy>
        <mkdir dir="${plugin.path}"/>
        <copy todir="${project.path}/plugins">
            <fileset dir="lib/plugins">
                <include name="org.eclipse.core.runtime.compatibility_3.1.0.jar"/>
                <include name="org.eclipse.ui.forms_3.1.0.jar"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}">
            <fileset dir=".">
                <include name="images/**"/>
                <include name="lib/*.jar"/>
                <include name="plugin.xml"/>
                <include name="splash.bmp"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}/lib">
            <fileset dir="target">
                <include name="${project.name}-${project.version}.jar"/>
            </fileset>
        </copy>
        <copy todir="${plugin.path}/META-INF" file="MANIFEST.MF" overwrite="true">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <taskdef name="manifest-generator" classname="org.safehaus.penrose.tools.ManifestTask" classpath="target/penrose-studio-tools-${project.version}.jar"/>
        <manifest-generator
            file="${plugin.path}/META-INF/MANIFEST.MF"
            dir="${plugin.path}/lib"
            newDir="lib"
        />
        <copy todir="${project.path}" file="README.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${project.path}" file="COPYING.txt"/>
        <copy todir="${project.path}" file="INSTALL-BINARY.txt"/>
        <copy todir="${project.path}/docs">
            <fileset dir="docs" includes="*.url"/>
        </copy>
        <copy todir="${project.path}" file="images/penrose.ico"/>
    </target>

    <target name="dist" depends="init">
        <antcall target="build-linux"/>
        <antcall target="build-macosx-carbon"/>
        <antcall target="build-win32"/>
    </target>

    <target name="build-linux" depends="init" if="isLinux">
        <property name="platform" value="linux-gtk"/>
        <property name="project.path" value="target/${project.name}-${project.version}-${platform}"/>
        <!-- uncompress rpc -->
        <untar src="rcp/${rcp.prefix}-${platform}.tar.gz" dest="target" compression="gzip"/>
        <move todir="${project.path}">
            <fileset dir="target/eclipse"/>
        </move>
        <move file="${project.path}/eclipse" tofile="${project.path}/${project.name}"/>
        <chmod file="${project.path}/${project.name}" perm="ugo+rx"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

    <target name="build-macosx-carbon" depends="init" if="isMac">
        <property name="platform" value="macosx-carbon"/>
        <property name="project.path" value="target/${project.name}-${project.version}-${platform}"/>
        <!-- uncompress rcp -->
        <untar src="rcp/${rcp.prefix}-${platform}.tar.gz" dest="target" compression="gzip"/>
        <move todir="${project.path}">
            <fileset dir="target/eclipse"/>
        </move>
        <!-- apply universal binary patch -->
        <copy
            todir="${project.path}/plugins"
            file="rcp/org.eclipse.swt.carbon.macosx.ppc_3.1.0.jar"
            overwrite="true"
        />
        <chmod file="${project.path}/eclipse" perm="ugo+rx"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

    <target name="build-win32" depends="init" if="isWindows">
        <property name="platform" value="win32"/>
        <property name="project.path" value="target/${project.name}-${project.version}-${platform}"/>
        <!-- uncompress rpc -->
        <unzip src="rcp/${rcp.prefix}-${platform}.zip" dest="target"/>
        <move todir="${project.path}">
            <fileset dir="target/eclipse"/>
        </move>
        <move file="${project.path}/eclipse.exe" tofile="${project.path}/penrose-studio.exe"/>
        <antcall target="build">
            <param name="platform" value="${platform}"/>
        </antcall>
    </target>

<!--
    <target name="plugin-export">
        <pde.exportPlugins plugins="org.safehaus.penrose"
            destination="target" filename="penrose-plugin.zip"
            exportType="zip" exportSource="false"/>
    </target>
-->

    <target name="dist-src" depends="init">
        <echo message="Creating ${project.name}-${project.version}-src.tar.gz"/>
        <mkdir dir="${project.dist}"/>
        <tar destfile="${project.dist}/${project.name}-${project.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${project.name}-${project.version}">
                <exclude name="${project.dist}/**"/>
                <exclude name="target/**"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-all" depends="compile">
        <copy todir="${project.dist}"
            file="target/${project.name}-${project.version}.jar">
        </copy>
        <antcall target="dist-linux"/>
        <antcall target="dist-macosx-carbon"/>
        <antcall target="dist-win32"/>
    </target>

    <target name="dist-linux" depends="build-linux" if="isLinux">
        <antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.name" value="${project.name}-${project.version}-1.i386.rpm"/>
        </antcall>
    </target>

    <target name="dist-macosx-carbon" depends="build-macosx-carbon" if="isMac">
        <echo message="Creating target/Penrose Studio.app"/>
        <move todir="${project.path}/Penrose Studio.app">
            <fileset dir="${project.path}/Eclipse.app"/>
        </move>
        <delete file="${project.path}/eclipse" />
        <move tofile="${project.path}/Penrose Studio.app/Contents/MacOS/penrose-studio" file="${project.path}/Penrose Studio.app/Contents/MacOS/eclipse" />
        <chmod file="${project.path}/Penrose Studio.app/Contents/MacOS/penrose-studio" perm="ugo+rx"/>
        <copy todir="${project.path}/Penrose Studio.app/Contents" file="rcp/Info.plist" overwrite="true"/>
        <copy todir="${project.path}/Penrose Studio.app/Contents/MacOS" file="rcp/eclipse.ini" overwrite="true"/>
        <delete file="${project.path}/Penrose Studio.app/Contents/Resources/Eclipse.icns" />
        <copy todir="${project.path}/Penrose Studio.app/Contents/Resources" file="images/Penrose.icns" overwrite="true"/>
        <exec executable="/usr/bin/hdiutil">
            <arg line="create"/>
            <arg line="-fs HFS+"/>
            <arg line="-srcdir ${project.path}"/>
            <arg line="${project.path}.dmg"/>
        </exec>
    </target>

    <target name="dist-win32" depends="build-win32" if="isWindows">
        <echo message="Creating ${project.dist}/${project.name}-${project.version}.exe"/>
        <copy todir="target" file="installer/penrose-studio.iss">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <exec executable="${iscc.path}" os="Windows NT,Windows 2000,Windows XP,Windows 2003">
            <arg line="/Q target/penrose-studio.iss"/>
        </exec>
        <antcall target="rpm">
            <param name="rpm.prefix" value="${cygwin.home}"/>
            <param name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
            <param name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
            <param name="rpm.name" value="${project.name}-${project.version}-1.cygwin.i386.rpm"/>
        </antcall>
    </target>

    <target name="rpm-check" depends="init">
        <echo message="Checking ${rpm.builder}"/>
        <condition property="hasRpmBuilder">
            <available file="${rpm.builder}"/>
        </condition>
    </target>

    <target name="rpm-build" depends="dist-src" if="hasRpmBuilder">
        <copy todir="target" file="installer/penrose-studio.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${project.dist}/${project.name}-${project.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-bb target/penrose-studio.spec"/>
        </exec>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/RPMS/i386/${rpm.name}">
        </copy>
    </target>

    <target name="rpm" depends="rpm-check,rpm-build">
    </target>

    <target name="install" depends="init">
        <antcall target="install-linux"/>
        <antcall target="install-macosx"/>
        <antcall target="install-win32"/>
    </target>

    <target name="install-linux" if="isLinux">
        <antcall target="install-dist">
            <param name="platform" value="linux-gtk"/>
        </antcall>
        <chmod dir="${penrose.studio.home}" perm="ugo+rx" includes="penrose-studio"/>
    </target>

    <target name="install-macosx" if="isMac">
        <antcall target="install-dist">
            <param name="platform" value="macosx-carbon"/>
        </antcall>
    </target>

    <target name="install-win32" depends="init" if="isWindows">
        <antcall target="install-dist">
            <param name="platform" value="win32"/>
        </antcall>
    </target>

    <target name="pre-install" depends="init">
        <mkdir dir="${penrose.studio.home}"/>
        <condition property="penrose.conf.missing">
          <not>
            <available file="${penrose.studio.home}/conf/driver.xml"/>
          </not>
        </condition>
    </target>

    <target name="copy-penrose-conf" depends="init" if="penrose.conf.missing">
        <property name="dist.name" value="${project.name}-${project.version}-${platform}"/>
        <copy todir="${penrose.studio.home}">
            <fileset dir="target/${dist.name}">
                <include name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="install-dist" depends="pre-install,copy-penrose-conf">
        <property name="dist.name" value="${project.name}-${project.version}-${platform}"/>
        <delete failonerror="false">
            <fileset dir="${penrose.studio.home}" includes="lib/*"/>
        </delete>
        <copy todir="${penrose.studio.home}">
            <fileset dir="target/${dist.name}">
                <include name="**/*"/>
                <exclude name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="uninstall" depends="init">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${penrose.studio.home}/docs" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/features" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/plugins" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/readme" includes="**/*"/>
            <fileset dir="${penrose.studio.home}/work" includes="**/*"/>
            <fileset dir="${penrose.studio.home}" includes="*"/>
        </delete>
    </target>

</project>

